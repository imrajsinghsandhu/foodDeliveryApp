{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _reactNativeSvg = _interopRequireWildcard(require(\"react-native-svg\"));\n\nvar _reactNativeIphoneXHelper = require(\"react-native-iphone-x-helper\");\n\nvar _screens = require(\"../screens\");\n\nvar _constants = require(\"../constants\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Imraj\\\\Desktop\\\\LCRN08-food-delivery-app-master\\\\LCRN08-food-delivery-app-master\\\\navigation\\\\tabs.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\n\nvar TabBarCustomButton = function TabBarCustomButton(_ref) {\n  var accessibilityState = _ref.accessibilityState,\n      children = _ref.children,\n      onPress = _ref.onPress;\n  var isSelected = accessibilityState.selected;\n\n  if (isSelected) {\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: {\n        flexDirection: 'row',\n        position: 'absolute',\n        top: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: {\n        flex: 1,\n        backgroundColor: _constants.COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }), _react.default.createElement(_reactNativeSvg.default, {\n      width: 75,\n      height: 61,\n      viewBox: \"0 0 75 61\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, _react.default.createElement(_reactNativeSvg.Path, {\n      d: \"M75.2 0v61H0V0c4.1 0 7.4 3.1 7.9 7.1C10 21.7 22.5 33 37.7 33c15.2 0 27.7-11.3 29.7-25.9.5-4 3.9-7.1 7.9-7.1h-.1z\",\n      fill: _constants.COLORS.white,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    })), _react.default.createElement(_reactNative.View, {\n      style: {\n        flex: 1,\n        backgroundColor: _constants.COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    })), _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        top: -22.5,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: _constants.COLORS.white\n      },\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, children));\n  } else {\n    return _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        flex: 1,\n        height: 60,\n        backgroundColor: _constants.COLORS.white\n      },\n      activeOpacity: 1,\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, children);\n  }\n};\n\nvar CustomTabBar = function CustomTabBar(props) {\n  if ((0, _reactNativeIphoneXHelper.isIphoneX)()) {\n    return _react.default.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: 30,\n        backgroundColor: _constants.COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), _react.default.createElement(_bottomTabs.BottomTabBar, (0, _extends2.default)({}, props.props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })));\n  } else {\n    return _react.default.createElement(_bottomTabs.BottomTabBar, (0, _extends2.default)({}, props.props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }));\n  }\n};\n\nvar Tabs = function Tabs() {\n  return _react.default.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        position: 'absolute',\n        left: 0,\n        bottom: 0,\n        right: 0,\n        borderTopWidth: 0,\n        backgroundColor: \"transparent\",\n        elevation: 0\n      }\n    },\n    tabBar: function tabBar(props) {\n      return _react.default.createElement(CustomTabBar, {\n        props: props,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: _screens.Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return _react.default.createElement(_reactNative.Image, {\n          source: _constants.icons.cutlery,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? _constants.COLORS.primary : _constants.COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return _react.default.createElement(TabBarCustomButton, (0, _extends2.default)({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: _screens.Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return _react.default.createElement(_reactNative.Image, {\n          source: _constants.icons.search,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? _constants.COLORS.primary : _constants.COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return _react.default.createElement(TabBarCustomButton, (0, _extends2.default)({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Like\",\n    component: _screens.Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return _react.default.createElement(_reactNative.Image, {\n          source: _constants.icons.like,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? _constants.COLORS.primary : _constants.COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return _react.default.createElement(TabBarCustomButton, (0, _extends2.default)({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"User\",\n    component: _screens.Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return _react.default.createElement(_reactNative.Image, {\n          source: _constants.icons.user,\n          resizeMode: \"contain\",\n          style: {\n            width: 25,\n            height: 25,\n            tintColor: focused ? _constants.COLORS.primary : _constants.COLORS.secondary\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return _react.default.createElement(TabBarCustomButton, (0, _extends2.default)({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar _default = Tabs;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Imraj/Desktop/LCRN08-food-delivery-app-master/LCRN08-food-delivery-app-master/navigation/tabs.js"],"names":["Tab","TabBarCustomButton","accessibilityState","children","onPress","isSelected","selected","flex","alignItems","flexDirection","position","top","backgroundColor","COLORS","white","justifyContent","width","height","borderRadius","CustomTabBar","props","bottom","left","right","Tabs","showLabel","style","borderTopWidth","elevation","Home","tabBarIcon","focused","icons","cutlery","tintColor","primary","secondary","tabBarButton","search","like","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Image,\n    TouchableOpacity\n} from 'react-native';\nimport { createBottomTabNavigator, BottomTabBar } from \"@react-navigation/bottom-tabs\"\nimport Svg, { Path } from 'react-native-svg';\nimport { isIphoneX } from 'react-native-iphone-x-helper';\n\nimport { Home } from \"../screens\"\n\nimport { COLORS, icons } from \"../constants\"\n\nconst Tab = createBottomTabNavigator();\n\nconst TabBarCustomButton = ({ accessibilityState, children, onPress }) => {\n\n    var isSelected = accessibilityState.selected\n\n    if (isSelected) {\n        return (\n            <View style={{ flex: 1, alignItems: \"center\" }}>\n                <View style={{ flexDirection: 'row', position: 'absolute', top: 0 }}>\n                    <View style={{ flex: 1, backgroundColor: COLORS.white }}></View>\n                    <Svg\n                        width={75}\n                        height={61}\n                        viewBox=\"0 0 75 61\"\n                    >\n                        <Path\n                            d=\"M75.2 0v61H0V0c4.1 0 7.4 3.1 7.9 7.1C10 21.7 22.5 33 37.7 33c15.2 0 27.7-11.3 29.7-25.9.5-4 3.9-7.1 7.9-7.1h-.1z\"\n                            fill={COLORS.white}\n                        />\n                    </Svg>\n                    <View style={{ flex: 1, backgroundColor: COLORS.white }}></View>\n                </View>\n\n                <TouchableOpacity\n                    style={{\n                        top: -22.5,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        width: 50,\n                        height: 50,\n                        borderRadius: 25,\n                        backgroundColor: COLORS.white\n                    }}\n                    onPress={onPress}\n                >\n                    {children}\n                </TouchableOpacity>\n            </View>\n        )\n    } else {\n        return (\n            <TouchableOpacity\n                style={{\n                    flex: 1,\n                    height: 60,\n                    backgroundColor: COLORS.white\n                }}\n                activeOpacity={1}\n                onPress={onPress}\n            >\n                {children}\n            </TouchableOpacity>\n        )\n    }\n}\n\nconst CustomTabBar = (props) => {\n    if (isIphoneX()) {\n        return (\n            <View>\n                <View\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        height: 30,\n                        backgroundColor: COLORS.white\n                    }}\n                ></View>\n                <BottomTabBar\n                    {...props.props}\n                />\n            </View>\n        )\n    } else {\n        return (\n            <BottomTabBar\n                {...props.props}\n            />\n        )\n    }\n\n}\n\nconst Tabs = () => {\n    return (\n        <Tab.Navigator\n            tabBarOptions={{\n                showLabel: false,\n                style: {\n                    position: 'absolute',\n                    left: 0,\n                    bottom: 0,\n                    right: 0,\n                    borderTopWidth: 0,\n                    backgroundColor: \"transparent\",\n                    elevation: 0\n                }\n            }}\n            tabBar={(props) => (\n                <CustomTabBar\n                    props={props}\n                />\n            )}\n        >\n            <Tab.Screen\n                name=\"Home\"\n                component={Home}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <Image\n                            source={icons.cutlery}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 25,\n                                height: 25,\n                                tintColor: focused ? COLORS.primary : COLORS.secondary\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabBarCustomButton\n                            {...props}\n                        />\n                    )\n                }}\n            />\n\n            <Tab.Screen\n                name=\"Search\"\n                component={Home}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <Image\n                            source={icons.search}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 25,\n                                height: 25,\n                                tintColor: focused ? COLORS.primary : COLORS.secondary\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabBarCustomButton\n                            {...props}\n                        />\n                    )\n                }}\n            />\n\n            <Tab.Screen\n                name=\"Like\"\n                component={Home}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <Image\n                            source={icons.like}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 25,\n                                height: 25,\n                                tintColor: focused ? COLORS.primary : COLORS.secondary\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabBarCustomButton\n                            {...props}\n                        />\n                    )\n                }}\n            />\n\n            <Tab.Screen\n                name=\"User\"\n                component={Home}\n                options={{\n                    tabBarIcon: ({ focused }) => (\n                        <Image\n                            source={icons.user}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 25,\n                                height: 25,\n                                tintColor: focused ? COLORS.primary : COLORS.secondary\n                            }}\n                        />\n                    ),\n                    tabBarButton: (props) => (\n                        <TabBarCustomButton\n                            {...props}\n                        />\n                    )\n                }}\n            />\n        </Tab.Navigator>\n    )\n}\n\nexport default Tabs"]},"metadata":{},"sourceType":"script"}